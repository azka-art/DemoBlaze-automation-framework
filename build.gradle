plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'io.qameta.allure' version '2.11.2'
}

group 'com.demoblaze'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceCompatibility = 11
targetCompatibility = 11

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'commons-logging') {
            details.useTarget 'org.slf4j:jcl-over-slf4j:1.7.36'
        }
    }
}

allure {
    version = '2.22.0'
    adapter {
        allureJavaVersion = '2.22.0'
        aspectjVersion = '1.9.19'
        aspectjweaver = true
        
        frameworks {
            junit4 {
                adapterVersion = '2.22.0'
            }
        }
    }
}

dependencies {
    // Cucumber
    implementation 'io.cucumber:cucumber-java:7.11.1'
    implementation 'io.cucumber:cucumber-junit:7.11.1'
    
    // RestAssured for API Testing
    implementation 'io.rest-assured:rest-assured:5.3.0'
    implementation 'io.rest-assured:json-schema-validator:5.3.0'
    
    // Selenium for Web UI Testing
    implementation 'org.seleniumhq.selenium:selenium-java:4.9.0'
    implementation('io.github.bonigarcia:webdrivermanager:5.9.2') {
        exclude group: 'org.slf4j'
    }
    
    // Allure reporting
    implementation 'io.qameta.allure:allure-cucumber7-jvm:2.22.0'
    implementation 'io.qameta.allure:allure-junit4:2.22.0'
    
    // For JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.0'
    
    // JUnit
    testImplementation 'junit:junit:4.13.2'
    
    // Faker for test data
    implementation 'com.github.javafaker:javafaker:1.0.2'
    
    // AssertJ for more expressive assertions
    implementation 'org.assertj:assertj-core:3.24.2'
    
    // Commons IO for file operations
    implementation 'commons-io:commons-io:2.11.0'
    
    // Fix missing dependencies
    implementation 'ch.randelshofer:fastdoubleparser:0.8.0'
    implementation 'com.beust:jcommander:1.82'
    
    // Logging
    implementation 'org.slf4j:slf4j-simple:2.0.9'
}

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

tasks.register('apiTests', JavaExec) {
    dependsOn assemble, testClasses
    group = 'Verification'
    description = 'Runs API tests'
    
    mainClass = "io.cucumber.core.cli.Main"
    classpath = configurations.testRuntimeClasspath + sourceSets.main.output + sourceSets.test.output
    args = ['--plugin', 'pretty',
            '--plugin', 'html:build/reports/cucumber/api/index.html',
            '--plugin', 'json:build/reports/cucumber/api/cucumber.json',
            '--plugin', 'io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm',
            '--glue', 'com.demoblaze.stepdefinitions.api',
            '--tags', '@api',
            'src/test/resources/features/api']
}

tasks.register('webTests', JavaExec) {
    dependsOn assemble, testClasses
    group = 'Verification'
    description = 'Runs Web UI tests'
    
    mainClass = "io.cucumber.core.cli.Main"
    classpath = configurations.testRuntimeClasspath + sourceSets.main.output + sourceSets.test.output
    args = ['--plugin', 'pretty',
            '--plugin', 'html:build/reports/cucumber/web/index.html',
            '--plugin', 'json:build/reports/cucumber/web/cucumber.json',
            '--plugin', 'io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm',
            '--glue', 'com.demoblaze.stepdefinitions.web',
            '--tags', '@web',
            'src/test/resources/features/web']
}

test {
    useJUnit()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.deprecation = true
}
